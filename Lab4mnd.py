from random import randint


def Lab4(k):
    m = k
    N = 8
    x1 = [-30, 20]
    x2 = [-70, -10]
    x3 = [-70, -40]

    print("x1 min =", x1[0], ", x1 max = ", x1[1])
    print("x2 min =", x2[0], ", x2 max = ", x2[1])
    print("x3 min =", x3[0], ", x3 max = ", x3[1])
    print("----------------------------------------------------------------------------------")

    Xsermin = (x1[0] + x2[0] + x3[0])/3
    Xsermax = (x1[1] + x2[1] + x3[1])/3

    print("Xcp min = ", Xsermin)
    print("Xcp max = ", Xsermax)
    print("----------------------------------------------------------------------------------")

    Ymin = 200 + Xsermin
    Ymax = 200 + Xsermax

    print("Y min = ", Ymin)
    print("Y max = ", Ymax)
    print("----------------------------------------------------------------------------------")

    Ymatr = [[randint(int(Ymin), int(Ymax)) for i in range(m)] for j in range(N)]
    print("Матриця У:")
    for i in Ymatr:
        print(i)
    print("----------------------------------------------------------------------------------")

    Ymatr_ser = [round(sum(i) / len(i), 1) for i in Ymatr]
    print("Середні У:")
    for i in Ymatr_ser:
        print(i)
    print("----------------------------------------------------------------------------------")

    Xmatr_norm = [[-1, -1, -1],
                    [-1, -1, 1],
                    [-1, 1, -1],
                    [-1, 1, 1],
                    [1, -1, -1],
                    [1, -1, 1],
                    [1, 1, -1],
                    [1, 1, 1]]

    b0 = round(sum(Ymatr_ser) / N, 3)
    b1 = round(sum([Ymatr_ser[i] * Xmatr_norm[i][0] for i in range(N)]) / N, 3)
    b2 = round(sum([Ymatr_ser[i] * Xmatr_norm[i][1] for i in range(N)]) / N, 3)
    b3 = round(sum([Ymatr_ser[i] * Xmatr_norm[i][2] for i in range(N)]) / N, 3)
    b12 = round(sum([Ymatr_ser[i] * Xmatr_norm[i][0] * Xmatr_norm[i][1] for i in range(N)]) / N, 3)
    b13 = round(sum([Ymatr_ser[i] * Xmatr_norm[i][0] * Xmatr_norm[i][2] for i in range(N)]) / N, 3)
    b23 = round(sum([Ymatr_ser[i] * Xmatr_norm[i][1] * Xmatr_norm[i][2] for i in range(N)]) / N, 3)
    b123 = round(sum([Ymatr_ser[i] * Xmatr_norm[i][0] * Xmatr_norm[i][1] * Xmatr_norm[i][2] for i in range(N)]) / N, 3)

    matrix_plan = [[x1[0], x2[0], x3[0], x1[0] * x2[0], x1[0] * x3[0], x2[0] * x3[0], x1[0] * x2[0] * x3[0]],
                    [x1[0], x2[0], x3[1], x1[0] * x2[0], x1[0] * x3[1], x2[0] * x3[1], x1[0] * x2[0] * x3[1]],
                    [x1[0], x2[1], x3[0], x1[0] * x2[1], x1[0] * x3[0], x2[1] * x3[0], x1[0] * x2[1] * x3[0]],
                    [x1[0], x2[1], x3[1], x1[0] * x2[1], x1[0] * x3[1], x2[1] * x3[1], x1[0] * x2[1] * x3[1]],
                    [x1[1], x2[0], x3[0], x1[1] * x2[0], x1[1] * x3[0], x2[0] * x3[0], x1[1] * x2[0] * x3[0]],
                    [x1[1], x2[0], x3[1], x1[1] * x2[0], x1[1] * x3[1], x2[0] * x3[1], x1[1] * x2[0] * x3[1]],
                    [x1[1], x2[1], x3[0], x1[1] * x2[1], x1[1] * x3[0], x2[1] * x3[0], x1[1] * x2[1] * x3[0]],
                    [x1[1], x2[1], x3[1], x1[1] * x2[1], x1[1] * x3[1], x2[1] * x3[1], x1[1] * x2[1] * x3[1]]]

    print("Mатриця планування:")
    for i in matrix_plan:
        print(i)
    print("----------------------------------------------------------------------------------")

    print("Перевірка однорідності за критерієм Кохрена")
    print("----------------------------------------------------------------------------------")

    dispersion = [sum([(Ymatr[j][i] - Ymatr_ser[i]) ** 2 for i in range(m)]) / m for j in range(N)]
    print("Дисперсії по рядках:")
    for i in dispersion:
        print(round(i, 2))
    print("----------------------------------------------------------------------------------")


    Gp = max(dispersion) / sum(dispersion)
    print("Gp = ", Gp)
    print("----------------------------------------------------------------------------------")

    if Gp > 0.5157:
        print("Дисперсія неоднорідна!")
        m += 1
        Lab4(m)
        print("----------------------------------------------------------------------------------")
    else:
        print("Дисперсія однорідна")
        print("----------------------------------------------------------------------------------")

    print("Оцінка значимості коефіцієнтів за критерієм Стюдента")
    print("----------------------------------------------------------------------------------")

    s2b = sum(dispersion) / N
    s2bs = s2b / (m * N)
    sbs = s2bs ** (1/2)
    print("sbs = ", sbs)
    print("----------------------------------------------------------------------------------")

    b_array = [b0, b1, b2, b3, b12, b13, b23, b123]
    t_array = [round(abs(b_array[i]) / sbs, 3) for i in range(N)]

    print("Значення бет: ", b_array)
    print("----------------------------------------------------------------------------------")

    print("Значення t: ", t_array)
    print("----------------------------------------------------------------------------------")


    d = 0
    for i in range(N):
        if t_array[i] < 2.120:
            b_array[i] = 0
            print(f"Коефіцієнт b{i} приймаємо не значним при рівні значимості 0.05")
        else:
            d += 1

    print("----------------------------------------------------------------------------------")
    Yreg = [b_array[0] + b_array[1] * matrix_plan[i][0] + b_array[2] * matrix_plan[i][1] + b_array[3] * matrix_plan[i][2] + b_array[4] * matrix_plan[i][3] + b_array[5] * matrix_plan[i][4] + b_array[6] * matrix_plan[i][5] + b_array[7] * matrix_plan[i][6] for i in range(N)]
    print("Значення рівнянь регресій:", Yreg)

    print("----------------------------------------------------------------------------------")
    print("Перевірка на адекватність за критерієм Фішера")
    print("----------------------------------------------------------------------------------")
    print("Кількість значимих коефіціентів:", d)

    sad = (m / (N - d)) * int(sum([(Yreg[i] - Ymatr_ser[i]) ** 2 for i in range(N)]))
    Fp = sad / s2b
    print("Fp = ", Fp)
    print("----------------------------------------------------------------------------------")

    if Fp > 4.5:
        print("Рівняння регресії неадекватно оригіналу при рівні значимості 0.05")
        print("----------------------------------------------------------------------------------")
    else:
        print("Рівняння регресії адекватно оригіналу при рівні значимості 0.05")
        print("----------------------------------------------------------------------------------")

Lab4(3)
